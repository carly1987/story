name: android-build

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v4
      with:
        node-version: '22'
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17.0.10'
        distribution: adopt
    - name: Setup Android SDK
      uses: Swisyn/setup-android-sdk@v1
    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      with:
        # Exact version to use
        ndk-version: r26d
        # Add installed NDK to the Android SDK
        link-to-sdk: true

    - uses: seanmiddleditch/gha-setup-ninja@v4
      id: setup-ninja
      with:
        version: 1.11.1
    - id: setup-rust
      name: setup rust
      uses: ningenMe/setup-rustup@v1.1.0
      with:
        rust-version: 1.81.0
    - name: Prepare OpenSSL build script
      run: |
        mkdir -p scripts
        cat > ./scripts/build-openssl-android.sh <<'EOF'
        #!/bin/bash
        set -e
        
        TARGET=$1
        NDK=$2
        
        wget https://mirrors.tencent.com/openssl/source/openssl-1.1.1w.tar.gz -O openssl.tar.gz || \
        wget https://mirrors.tuna.tsinghua.edu.cn/openssl/source/openssl-1.1.1w.tar.gz -O openssl.tar.gz || \
        wget https://mirrors.ustc.edu.cn/openssl/source/openssl-1.1.1w.tar.gz -O openssl.tar.gz
        
        tar xzf openssl.tar.gz
        cd openssl-1.1.1w
        
        case $TARGET in
          aarch64-linux-android) ARCH=android-arm64 ;;
          armv7-linux-androideabi) ARCH=android-arm ;;
          i686-linux-android) ARCH=android-x86 ;;
          x86_64-linux-android) ARCH=android-x86_64 ;;
          *) echo "Unknown target: $TARGET"; exit 1 ;;
        esac
        
        PATH=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH \
        ./Configure $ARCH -D__ANDROID_API__=21 --prefix=$(pwd)/../openssl-install/$TARGET
        
        make -j$(nproc)
        make install
        cd ..
        EOF
        
        chmod +x ./scripts/build-openssl-android.sh
    - name: Configure OpenSSL for Android
      run: |
        # 确保 NDK 路径正确
        NDK_PATH="$ANDROID_HOME/ndk/$(ls -d $ANDROID_HOME/ndk/* | sort -V | tail -n 1 | xargs basename)"
        echo "NDK_HOME=${NDK_PATH}" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=${NDK_PATH}" >> $GITHUB_ENV

        # 安装必要工具
        sudo apt-get update -y
        sudo apt-get install -y \
          clang \
          cmake \
          ninja-build \
          make \
          gcc \
          g++ \
          perl \
          python3

        # 下载并解压 OpenSSL
        mkdir -p openssl-build
        cd openssl-build
        wget https://www.openssl.org/source/openssl-1.1.1w.tar.gz -O openssl.tar.gz || \
        wget https://mirrors.tuna.tsinghua.edu.cn/openssl/source/openssl-1.1.1w.tar.gz -O openssl.tar.gz
        tar xzf openssl.tar.gz
        cd openssl-1.1.1w

        # 设置 NDK 工具链路径（关键修复）
        export ANDROID_NDK_HOME="${NDK_PATH}"
        export PATH="${NDK_PATH}/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH}"

        # 为所有 Android 目标构建
        for arch in arm64 arm x86 x86_64; do
          case ${arch} in
            arm64)
              target="aarch64-linux-android"
              api="21"
              openssl_arch="android-arm64"
              ;;
            arm)
              target="armv7-linux-androideabi"
              api="21"
              openssl_arch="android-arm"
              ;;
            x86)
              target="i686-linux-android"
              api="21"
              openssl_arch="android-x86"
              ;;
            x86_64)
              target="x86_64-linux-android"
              api="21"
              openssl_arch="android-x86_64"
              ;;
          esac

          echo "Building for ${target} (${openssl_arch})"

          # 先运行 Configure 生成 Makefile（关键步骤）
          ./Configure ${openssl_arch} \
            -D__ANDROID_API__=${api} \
            --prefix="${PWD}/../openssl-${arch}" \
            no-shared \
            no-ssl3 \
            no-comp \
            no-hw \
            no-engine

          # 再执行 make
          make -j$(nproc)
          make install

          # 清理（可选）
          make distclean
        done

        # 合并所有架构的库
        mkdir -p "${GITHUB_WORKSPACE}/openssl-install"
        find .. -name "openssl-*" -type d | while read -r dir; do
          cp -r "${dir}/include" "${GITHUB_WORKSPACE}/openssl-install/" || true
          cp -r "${dir}/lib" "${GITHUB_WORKSPACE}/openssl-install/" || true
        done

        echo "OPENSSL_DIR=${GITHUB_WORKSPACE}/openssl-install" >> $GITHUB_ENV
        echo "OPENSSL_STATIC=1" >> $GITHUB_ENV
    - name: Debug OpenSSL Build
      run: |
        echo "=== OpenSSL Build Debug ==="
        find "${GITHUB_WORKSPACE}/openssl-install" -type f | head -n 50
        echo "=== NDK Toolchain ==="
        ls -la "${NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin"
    - name: Install OpenSSL
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev pkg-config
    - name: Set OpenSSL env vars
      run: |
        echo "OPENSSL_DIR=/usr" >> $GITHUB_ENV
        echo "OPENSSL_LIB_DIR=/usr/lib/x86_64-linux-gnu" >> $GITHUB_ENV
        echo "OPENSSL_INCLUDE_DIR=/usr/include" >> $GITHUB_ENV
    - name: Setup Rustup Target
      run: |
        rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android
    - name: Build child app
      run: |
        cd app
        yarn install
    - name: fix tao android bug
      run: |
        cd app/src-tauri
        cargo update -p tao
    - name: Build apk
      run: |
        cd app
        export JAVA_HOME='/opt/hostedtoolcache/Java_Adopt_jdk/17.0.10-7/x64'
        export ANDROID_HOME='/usr/local/lib/android/sdk'
        export NDK_HOME="$ANDROID_HOME/ndk/$(ls -d $ANDROID_HOME/ndk/* | sort -V | tail -n 1 | xargs basename)"
        yarn android-init
        NODE_OPTIONS="--max-old-space-size=4096" yarn android-build
    - name: Align apk
      run: |
        export JAVA_HOME='/opt/hostedtoolcache/Java_Adopt_jdk/17.0.10-7/x64'
        export ANDROID_HOME='/usr/local/lib/android/sdk'
        ls $ANDROID_HOME
        ls $ANDROID_HOME/build-tools
        $ANDROID_HOME/build-tools/31.0.0/zipalign -v 4 /home/runner/work/story/story/app/src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk /home/runner/work/story/story/app/src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned-aligned.apk
    - name: Decode keystore
      run: |
        echo ${{ secrets.KEYSTORE_BASE64 }} | base64 --decode > ./my-release-key.jks
    - name: Sign apk
      run: |
        export JAVA_HOME='/opt/hostedtoolcache/Java_Adopt_jdk/17.0.10-7/x64'
        export ANDROID_HOME='/usr/local/lib/android/sdk'
        $ANDROID_HOME/build-tools/31.0.0/apksigner sign --ks ./my-release-key.jks \
                                                       --ks-pass env:KEYSTORE_PASSWORD \
                                                       --key-pass env:KEY_PASSWORD \
                                                       --ks-key-alias "${{ secrets.KEY_ALIAS }}" \
                                                       --out /home/runner/work/story/story/app/src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk \
                                                       /home/runner/work/story/story/app/src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
    - name: Verify APK
      run: |
        export JAVA_HOME='/opt/hostedtoolcache/Java_Adopt_jdk/17.0.10-7/x64'
        export ANDROID_HOME='/usr/local/lib/android/sdk'
        $ANDROID_HOME/build-tools/31.0.0/apksigner verify ./gui/src-tauri/gen/android/app/build/outputs/apk/universal/release/ztm-app-v${{ vars.APP_VERSION }}-android.apk
    - uses: actions/upload-artifact@v4
      with:
        name: app-universal-release-unsigned
        path: /home/runner/work/story/story/app/src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk
