name: android-build

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v4
      with:
        node-version: '22'
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17.0.10'
        distribution: adopt
    - name: Setup Android SDK
      uses: Swisyn/setup-android-sdk@v1
    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      with:
        # Exact version to use
        ndk-version: r26d
        # Add installed NDK to the Android SDK
        link-to-sdk: true

    - uses: seanmiddleditch/gha-setup-ninja@v4
      id: setup-ninja
      with:
        version: 1.11.1
    - id: setup-rust
      name: setup rust
      uses: ningenMe/setup-rustup@v1.1.0
      with:
        rust-version: 1.81.0
    - name: Setup Rustup Target
      run: |
        rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android
    - name: Build child app
      run: |
        cd app
        yarn install
    - name: fix tao android bug
      run: |
        cd app/src-tauri
        cargo update -p tao
    
    - name: Install specific OpenSSL version
      run: |
        # 添加旧版软件源
        echo "deb http://security.ubuntu.com/ubuntu focal-security main" | sudo tee /etc/apt/sources.list.d/focal-security.list
        sudo apt-get update
        
        # 精确版本安装
        sudo apt-get install -y libssl1.1=1.1.1f-1ubuntu2.19 libssl-dev=1.1.1f-1ubuntu2.19
        
        # 验证安装
        echo "===== 安装的 OpenSSL 版本 ====="
        dpkg -l | grep libssl
        
        # 符号链接
        sudo ln -sf /usr/lib/x86_64-linux-gnu/libssl.so.1.1 /usr/lib/x86_64-linux-gnu/libssl.so
        sudo ln -sf /usr/lib/x86_64-linux-gnu/libcrypto.so.1.1 /usr/lib/x86_64-linux-gnu/libcrypto.so
    - name: Debug OpenSSL paths
      run: |
        echo "===== /home 目录结构 ====="
        ls -l /home/runner/work/story/story/
    - name: Set OpenSSL vendored flag
      run: |
        echo "OPENSSL_NO_VENDOR=0" >> $GITHUB_ENV
        echo "OPENSSL_STATIC=1" >> $GITHUB_ENV
    - name: Clean Rust cache
      run: |
        cd app/src-tauri
        cargo clean
        rm -rf ~/.cargo/registry
    - name: Build apk
      run: |
        cd app
        export JAVA_HOME='/opt/hostedtoolcache/Java_Adopt_jdk/17.0.10-7/x64'
        export ANDROID_HOME='/usr/local/lib/android/sdk'
        export NDK_HOME="$ANDROID_HOME/ndk/$(ls -d $ANDROID_HOME/ndk/* | sort -V | tail -n 1 | xargs basename)"
        # 精确路径设置
        export OPENSSL_DIR=/usr
        export OPENSSL_LIB_DIR=$(dirname $(readlink -f $(which openssl)))/../lib
        export OPENSSL_INCLUDE_DIR=/usr/include/openssl
        export PKG_CONFIG_ALLOW_CROSS=1
        export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig
        
        
        yarn android-init
        NODE_OPTIONS="--max-old-space-size=4096" yarn android-build
    - name: Align apk
      run: |
        export JAVA_HOME='/opt/hostedtoolcache/Java_Adopt_jdk/17.0.10-7/x64'
        export ANDROID_HOME='/usr/local/lib/android/sdk'
        ls $ANDROID_HOME
        ls $ANDROID_HOME/build-tools
        $ANDROID_HOME/build-tools/31.0.0/zipalign -v 4 /home/runner/work/story/story/app/src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk /home/runner/work/story/story/app/src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned-aligned.apk
    - name: Decode keystore
      run: |
        echo ${{ secrets.KEYSTORE_BASE64 }} | base64 --decode > ./my-release-key.jks
    - name: Sign apk
      run: |
        export JAVA_HOME='/opt/hostedtoolcache/Java_Adopt_jdk/17.0.10-7/x64'
        export ANDROID_HOME='/usr/local/lib/android/sdk'
        $ANDROID_HOME/build-tools/31.0.0/apksigner sign --ks ./my-release-key.jks \
                                                       --ks-pass env:KEYSTORE_PASSWORD \
                                                       --key-pass env:KEY_PASSWORD \
                                                       --ks-key-alias "${{ secrets.KEY_ALIAS }}" \
                                                       --out /home/runner/work/story/story/app/src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk \
                                                       /home/runner/work/story/story/app/src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
    - uses: actions/upload-artifact@v4
      with:
        name: app-universal-release-unsigned
        path: /home/runner/work/story/story/app/src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk
